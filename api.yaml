openapi: 3.0.0
servers:
    - url: http://localhost:3000/api
info:
    title: Bulldawg Marketplace API
    description: API for Bulldawg Marketplace Backend Functions
    version: 1.0.0
paths:
    /ping:
        get:
            summary: Server Ping
            description: Ensures that the API is functioning properly
            responses:
                '200':
                    description: Pong
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        description: Whether the request was successful or not
                                        example: 1
                                    message:
                                        type: string
                                        description: A message indicating the server response
                                        example: 'Pong!'
    /login:
        post:
            summary: Login
            description: Logs in using email/username and password.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'email@example.com'
                                password:
                                    type: string
                                    description: 'password123'
            responses:
                '400':
                    description: Invalid JSON body
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                MissingInfo:
                                    value:
                                        success: 0
                                        message: 'Either email or username is required.'
                                        error: 1
                                InvalidJSON:
                                    value:
                                        success: 0
                                        message: 'Error parsing JSON.'
                                        error: 1
                '401':
                    description: Invalid credentials
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            example:
                                success: 0
                                message: 'The password is invalid.'
                                error: 1
                '200':
                    description: Successful login
                    headers:
                        Set-Cookie:
                            description: Authorization token to be used for future requests
                            schema:
                                type: string
                                example: token=<token>; Path=/; HttpOnly; SameSite=Strict; MaxAge=3600;
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            example:
                                success: 1
                                message: 'Login Successful'
                                error: 0
    /register:
        post:
            summary: Register
            description: Registers a new account.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    description: 'email@example.com'
                                username:
                                    type: string
                                    description: 'exampleUser'
                                password:
                                    type: string
                                    description: 'password123'
                                firstName:
                                    type: string
                                    description: 'John'
                                lastName:
                                    type: string
                                    description: 'Doe'
                                profilePic:
                                    type: string
                                    description: 'Profile Photo URL (Optional)'
            responses:
                '400':
                    description: Invalid JSON body
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                MissingInfo:
                                    value:
                                        success: 0
                                        message: 'email, username, password, firstName, & lastName fields are required!'
                                        error: 1
                                InvalidJSON:
                                    value:
                                        success: 0
                                        message: 'Error parsing JSON.'
                                        error: 1
                                ExistingUser:
                                    value:
                                        success: 0
                                        message: '(Username <username>)/(Email <email>) is already in use.'
                                        error: 1
                '200':
                    description: Successful registration
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                Success:
                                    value:
                                        success: 1
                                        message: 'Registered successfully!'
                                        error: 0
    /post/create:
        post:
            summary: Create a Listing
            description: Allows a user to list a new product for sale.
            security:
                - cookieAuth: []
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: base64
                                title:
                                    type: string
                                    example: Mercedes Benz Car
                                price:
                                    type: number
                                    example: 43000
                                description:
                                    type: string
                                    example: A lightly used German racing machine

                        encoding:
                            file:
                                contentType: image/png, image/jpeg
            responses:
                '201':
                    description: 'Successful Listing'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                Success:
                                    value:
                                        success: 1
                                        message: 'Post created successfully!'
                                        error: 0
                '401':
                    description: 'Unauthorized Request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                Unauthorized:
                                    value:
                                        success: 0
                                        message: 'Unauthorized Request.'
                                        error: 1

                '400':
                    description: Invalid JSON body
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                MissingInfo:
                                    value:
                                        success: 0
                                        message: 'title, price, pic, & description fields are required.'
                                        error: 1
                                InvalidJSON:
                                    value:
                                        success: 0
                                        message: 'Error parsing JSON.'
                                        error: 1
    /me:
        get:
            summary: Me
            description: Checks authentication status for given user.
            security:
                - cookieAuth: []
            responses:
                '200':
                    description: 'Successfully Authenticated'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: string
                                        example: 'jndagji7138'
                                    email:
                                        type: string
                                        example: 'email@example.com'
                                    username:
                                        type: string
                                        example: 'exampleUser'
                '401':
                    description: 'Unauthorized'
                    content:
                        application/json:
                            schema:
                                type: object
    /logout:
        get:
            summary: Logout
            description: Destroys session cookie and logs the current user out.
            security:
                - cookieAuth: []
            responses:
                '200':
                    description: 'Logout'
                    headers:
                        Set-Cookie:
                            description: Destroyed authorization cookie
                            schema:
                                type: string
                                example: token=; Path=/; HttpOnly; SameSite=Strict; MaxAge=-1;
    /user/profilePic:
        patch:
            summary: Update Profile Picture
            description: Updates a users profile picture
            security:
                - cookieAuth: []
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                file:
                                    type: string
                                    format: base64
                        encoding:
                            file:
                                contentType: image/png, image/jpeg

            responses:
                '200':
                    description: Updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                Success:
                                    value:
                                        success: 1
                                        message: Successfully updated profile picture!
                                        error: 0
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                Unauthorized:
                                    value:
                                        success: 0
                                        message: Unauthorized Request
                                        error: 1
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                MissingParameter:
                                    value:
                                        success: 0
                                        message: 'The file parameter is required.'
                                        error: 1
                                MalformedRequest:
                                    value:
                                        success: 0
                                        message: 'There was an error processing the form data.'
                                        error: 1
                '500':
                    description: Server Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                ServerError:
                                    value:
                                        success: 0
                                        message: User cannot be found.
                                        error: 1
    /post:
        get:
            summary: Posts
            description: Retrieves available listings.
            responses:
                '200':
                    description: Request All Available Listings
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        description: Whether request was successful.
                                        type: integer
                                        enum:
                                            - 0
                                            - 1
                                    message:
                                        description: Available listings
                                        type: object
                                    error:
                                        description: Whether an error occurred.
                                        type: integer
                                        enum:
                                            - 0
                                            - 1
                '400':
                    description: Request Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                RequestError:
                                    value:
                                        success: 0
                                        message: 'There was an error processing this request.'
                                        error: 0
    /post/{id}:
        get:
            summary: Get Post
            description: Get specific post based on id
            parameters:
                - name: id
                  in: path
                  description: The unique identifier for the post
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Successful Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        description: Whether request was successful.
                                        type: integer
                                        enum:
                                            - 0
                                            - 1
                                    message:
                                        description: Post object
                                        type: object
                                    error:
                                        description: Whether an error occurred.
                                        type: integer
                                        enum:
                                            - 0
                                            - 1
                '400':
                    description: Invalid ID
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                InvalidID:
                                    value:
                                        success: 0
                                        message: The post could not be located.
                                        error: 1
                '500':
                    description: Unknown Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                UnknownError:
                                    value:
                                        success: 0
                                        message: An unknown error has occurred.
                                        error: 1
        patch:
            summary: Update Post
            description: Update a post by a specific id
            parameters:
                - name: id
                  in: path
                  description: The unique identifier for the post
                  required: true
                  schema:
                      type: string
            security:
                - cookieAuth: []
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                title:
                                    type: string
                                    example: 'Maserati Car'
                                price:
                                    type: number
                                    example: 3
                                description:
                                    type: string
                                    example: 'A quite boring Italian sports car'
                                pic:
                                    type: string
                                    example: 'https://i.postimg.cc/Jz2Lxq1r/image.png'
            responses:
                '200':
                    description: Successful Request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        description: Whether request was successful.
                                        type: integer
                                        enum:
                                            - 0
                                            - 1
                                    message:
                                        description: Updated post object
                                        type: object
                                    error:
                                        description: Whether an error occurred.
                                        type: integer
                                        enum:
                                            - 0
                                            - 1
                '400':
                    description: Invalid ID
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                InvalidID:
                                    value:
                                        success: 0
                                        message: The post could not be located.
                                        error: 1
                '500':
                    description: Unknown Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                UnknownError:
                                    value:
                                        success: 0
                                        message: An unknown error has occurred.
                                        error: 1
                '401':
                    description: 'Unauthorized Request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                Unauthorized:
                                    value:
                                        success: 0
                                        message: 'Unauthorized Request.'
                                        error: 1
        delete:
            summary: Delete Post
            description: Delete a post by a specific id
            parameters:
                - name: id
                  in: path
                  description: The unique identifier for the post
                  required: true
                  schema:
                      type: string
            security:
                - cookieAuth: []
            responses:
                '200':
                    description: Successful Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                InvalidID:
                                    value:
                                        success: 0
                                        message: Post deleted successfully.
                                        error: 1
                '400':
                    description: Invalid ID
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                InvalidID:
                                    value:
                                        success: 0
                                        message: The post could not be located.
                                        error: 1
                '500':
                    description: Unknown Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                UnknownError:
                                    value:
                                        success: 0
                                        message: An unknown error has occurred.
                                        error: 1
                '401':
                    description: 'Unauthorized Request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                Unauthorized:
                                    value:
                                        success: 0
                                        message: 'Unauthorized Request.'
                                        error: 1
    /post/{id}/purchase:
        summary: Purchase
        description: Purchases an available item
        get:
            parameters:
                - name: id
                  in: path
                  description: The unique identifier for the post
                  required: true
                  schema:
                      type: string
            security:
                - cookieAuth: []
            responses:
                '200':
                    description: Successful Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                InvalidID:
                                    value:
                                        success: 0
                                        message: 'Purchase successful! Remaining balance: <remaining_balance>'
                                        error: 1
                '401':
                    description: 'Unauthorized Request'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                Unauthorized:
                                    value:
                                        success: 0
                                        message: 'Unauthorized Request.'
                                        error: 1
                                UnknownUser:
                                    value:
                                        success: 0
                                        message: 'User cannot be found.'
                                        error: 1
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                OwnPost:
                                    value:
                                        success: 0
                                        message: 'You cannot purchase your own post!'
                                        error: 1
                                UnknownPost:
                                    value:
                                        success: 0
                                        message: 'Post cannot be found.'
                                        error: 1
                                InsufficientBalance:
                                    value:
                                        success: 0
                                        message: 'You cannot afford this item.'
                                        error: 1
                                UpdateError:
                                    value:
                                        success: 0
                                        message: 'Post canno tbe updated.'
                                        error: 1
                '500':
                    description: Unknown Error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                            examples:
                                Unknown:
                                    value:
                                        success: 0
                                        message: 'Unknown error occurred.'
                                        error: 1

components:
    schemas:
        Response:
            type: object
            properties:
                success:
                    description: Whether request was successful.
                    type: integer
                    enum:
                        - 0
                        - 1
                message:
                    description: Response message
                    type: string
                error:
                    description: Whether an error occurred.
                    type: integer
                    enum:
                        - 0
                        - 1
    securitySchemes:
        cookieAuth:
            type: apiKey
            in: cookie
            name: token
